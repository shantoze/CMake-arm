name: Build CMake for Android (armeabi-v7a) - API 34

on:
  workflow_dispatch:

jobs:
  build_android:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_CMAKE_VERSION: "cmake;3.22.1"
      ANDROID_NDK_VERSION_PACKAGE: "ndk;26.3.11579264"
      CMAKE_VERSION_TAG: "v3.29.3"
      ANDROID_PLATFORM: android-34

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK, NDK, and SDK's CMake
      env:
        ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
      run: |
        set -e
        export ANDROID_SDK_ROOT="$ANDROID_SDK_ROOT"
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        mkdir -p "$ANDROID_SDK_ROOT"

        echo "Downloading Android command line tools..."
        SDK_TOOLS_URL="https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip"
        wget -q -O cmdline-tools.zip "$SDK_TOOLS_URL"
        unzip -q cmdline-tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools-temp"
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
        mv "$ANDROID_SDK_ROOT/cmdline-tools-temp/cmdline-tools/"* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"
        rm -rf "$ANDROID_SDK_ROOT/cmdline-tools-temp"
        rm -f cmdline-tools.zip

        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"

        which sdkmanager || { echo "sdkmanager not found on PATH."; exit 1; }
        yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --update

        yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" \
          "platforms;${{ env.ANDROID_PLATFORM }}" \
          "build-tools;33.0.0" \
          "${{ env.ANDROID_NDK_VERSION_PACKAGE }}" \
          "${{ env.ANDROID_SDK_CMAKE_VERSION }}"

        NDK_BASE_PATH="$ANDROID_SDK_ROOT/ndk"
        if [ ! -d "$NDK_BASE_PATH" ] || [ -z "$(ls -A $NDK_BASE_PATH)" ]; then
          echo "Error: NDK base directory not found or empty."
          sdkmanager --list --sdk_root="$ANDROID_SDK_ROOT" | grep "ndk;" || echo "No NDK packages found."
          exit 1
        fi

        INSTALLED_NDK_SUBDIR=$(ls "$NDK_BASE_PATH" | head -n 1)
        if [ -z "$INSTALLED_NDK_SUBDIR" ]; then
          echo "Error: No subdirectory found in NDK base path."
          exit 1
        fi

        DETECTED_NDK_HOME="$NDK_BASE_PATH/$INSTALLED_NDK_SUBDIR"
        echo "ANDROID_NDK_HOME=$DETECTED_NDK_HOME" >> $GITHUB_ENV

        yes | sdkmanager --licenses --sdk_root="$ANDROID_SDK_ROOT"

    - name: Verify SDK & NDK setup
      env:
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
      run: |
        echo "Verifying SDK and NDK setup..."
        ls -lA "$ANDROID_SDK_ROOT"
        ls -lA "$ANDROID_NDK_HOME"

    - name: Install build tools
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y cmake make ninja-build git

    - name: Clone CMake source code
      run: |
        git clone --depth 1 --branch ${{ env.CMAKE_VERSION_TAG }} https://github.com/Kitware/CMake.git ${{ runner.temp }}/cmake_src

    - name: Patch cmlibuv core.c affinity for Android
      run: |
        CORE_C="${{ runner.temp }}/cmake_src/Utilities/cmlibuv/src/unix/core.c"
        cat <<'EOF' > patch_affinity.h
#ifdef __ANDROID__
#define CPU_SETSIZE 1
typedef int cpu_set_t;
typedef int pid_t;
static int sched_getaffinity(pid_t pid, size_t cpusetsize, cpu_set_t *mask) { return 0; }
static int CPU_COUNT(const cpu_set_t *set) { return 1; }
#endif
EOF
        cat patch_affinity.h "$CORE_C" > temp_core.c && mv temp_core.c "$CORE_C"
        head -20 "$CORE_C"

    - name: Configure CMake for Android
      env:
        CMAKE_BUILD_DIR: ${{ runner.temp }}/cmake_build_android
        CMAKE_SOURCE_DIR: ${{ runner.temp }}/cmake_src
        INSTALL_DIR: ${{ runner.temp }}/cmake_android_install
        ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
      run: |
        mkdir -p "$CMAKE_BUILD_DIR"
        cd "$CMAKE_BUILD_DIR"
        cmake "$CMAKE_SOURCE_DIR" \
          -DCMAKE_TOOLCHAIN_FILE="$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake" \
          -DANDROID_ABI=armeabi-v7a \
          -DANDROID_PLATFORM=${{ env.ANDROID_PLATFORM }} \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX="$INSTALL_DIR" \
          -DBUILD_TESTING=OFF

    - name: Build CMake with make
      env:
        CMAKE_BUILD_DIR: ${{ runner.temp }}/cmake_build_android
      run: |
        cd "$CMAKE_BUILD_DIR"
        make -j$(nproc)

    - name: Install CMake
      env:
        CMAKE_BUILD_DIR: ${{ runner.temp }}/cmake_build_android
        INSTALL_DIR: ${{ runner.temp }}/cmake_android_install
      run: |
        cd "$CMAKE_BUILD_DIR"
        make install
        echo "Contents of $INSTALL_DIR:"
        ls -lA "$INSTALL_DIR: ${{ runner.temp }}/cmake_android_install